apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  minReadySeconds: 0
  replicas: 1
  revisionHistoryLimit: 0
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nginx
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - nginx
            topologyKey: kubernetes.io/hostname
      initContainers: []
      enableServiceLinks: false
      terminationGracePeriodSeconds: 120
      containers:
      - name: nginx
        image: nginx:1.23.3
        ports: 
        - containerPort: 5678
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name        
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace        
        resources:
          limits:
            memory: 150M
          requests:
            cpu: '0.2'
        readinessProbe:
          httpGet:
            httpHeaders:
            - name: CheckType
              value: readiness
            path: /
            port: 80
          initialDelaySeconds: 2
          periodSeconds: 10
          timeoutSeconds: 9
        livenessProbe:
          httpGet:
            httpHeaders:
            - name: CheckType
              value: liveness
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
        volumeMounts:
        - name: config-volume
          mountPath: /etc/nginx/conf.d
      volumes:
      - name: config-volume
        configMap:
          name: nginx-config
  selector:
    matchLabels:
      app: nginx


